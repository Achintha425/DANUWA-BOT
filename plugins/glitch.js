const { cmd } = require("../command");
const { createCanvas } = require("canvas");
const fs = require("fs");
const path = require("path");

cmd(
{
  pattern: "glitchlogo",
  alias: ["glitchlogo", "digitalGlitchLogo"],
  react: "üï∂Ô∏è",
  desc: "Generate a glitchy digital distortion text logo",
  category: "Logo",
  filename: __filename,
},
async (
  robin,
  mek,
  m,
  {
    from,
    quoted,
    q,
    reply,
  }
) => {
  try {
    if (!q) return reply("*Please provide text for the glitch logo!* üï∂Ô∏è");

    reply("*Generating your glitchy logo...* ‚è≥");

    const canvas = createCanvas(700, 350);
    const ctx = canvas.getContext("2d");

    // Dark background
    ctx.fillStyle = "#000000";
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    // Glitch effect: random displacement of text
    ctx.font = "bold 70px sans-serif";
    ctx.textAlign = "center";
    ctx.textBaseline = "middle";
    ctx.fillStyle = "#00FF00"; // Neon green for text

    // Glitchy distortion
    for (let i = 0; i < q.length; i++) {
      const xOffset = Math.random() * 8 - 4; // Random X displacement
      const yOffset = Math.random() * 8 - 4; // Random Y displacement
      ctx.fillText(q[i], canvas.width / 2 + xOffset, canvas.height / 2 + yOffset);
    }

    // Export as buffer and save to file
    const buffer = canvas.toBuffer("image/png");
    const logoPath = path.resolve(__dirname, "tempGlitchLogo.png");
    fs.writeFileSync(logoPath, buffer);

    const caption = `
           üåü ùó™ùóòùóüùóñùó¢ùó†ùóò ùóßùó¢ üåü    
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê     
üîÆ  Ôº§  Ôº°  ÔºÆ  Ôºµ  Ôº∑  Ôº°  Ôºç  Ôº≠  Ôº§  üîÆ  
    üé® *_GLITCH LOGO GENERATOR_* üé®  
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê   

üñãÔ∏è *Your Text*: ${q}

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚úÖ *Logo created successfully!*
‚öôÔ∏è Made with ‚ù§Ô∏è By *DANUKA DISANAYAKA*üí´
    `;

    await robin.sendMessage(
      from,
      {
        image: { url: logoPath },
        caption,
      },
      { quoted: mek }
    );

    fs.unlinkSync(logoPath);
  } catch (err) {
    console.error(err);
    reply("*An error occurred while generating the glitch logo.* ‚ùå");
  }
});
